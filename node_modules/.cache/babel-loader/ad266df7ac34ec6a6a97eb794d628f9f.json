{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kadam\\\\react\\\\Visualization\\\\src\\\\components\\\\Matrix.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Matrix.css\";\nimport Node from \"./Node\";\n\nconst getInitialGrid = () => {\n  const grid = [];\n\n  for (let row = 0; row < 15; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < 40; col++) {\n      currentRow.push(createNode(col, row));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n};\n\nfunction Matrix() {\n  _s();\n\n  const [grid, setgrid] = useState([]);\n  useEffect(() => {\n    const grid1 = getInitialGrid();\n    setgrid(grid1);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map((row, rowIdx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.map((node, nodeIdx) => {\n              const {\n                row,\n                col,\n                isFinish,\n                isStart,\n                isWall\n              } = node;\n              return /*#__PURE__*/_jsxDEV(Node, {\n                col: col,\n                isFinish: isFinish,\n                isStart: isStart,\n                isWall: isWall,\n                row: row\n              }, nodeIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this);\n            })\n          }, rowIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Matrix, \"xoKUTY6WJ7tDiXVXnGRJGmfmtW4=\");\n\n_c = Matrix;\nexport default Matrix;\n\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === 6 && col === 10,\n    isFinish: row === 13 && col === 13,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"sources":["C:/Users/kadam/react/Visualization/src/components/Matrix.js"],"names":["React","useState","useEffect","Node","getInitialGrid","grid","row","currentRow","col","push","createNode","Matrix","setgrid","grid1","map","rowIdx","node","nodeIdx","isFinish","isStart","isWall","distance","Infinity","isVisited"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,UAAMC,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjCD,MAAAA,UAAU,CAACE,IAAX,CAAgBC,UAAU,CAACF,GAAD,EAAMF,GAAN,CAA1B;AACD;;AACDD,IAAAA,IAAI,CAACI,IAAL,CAAUF,UAAV;AACD;;AACD,SAAOF,IAAP;AACD,CAVD;;AAYA,SAASM,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,KAAK,GAAGT,cAAc,EAA5B;AACAQ,IAAAA,OAAO,CAACC,KAAD,CAAP;AACD,GAHQ,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGR,IAAI,CAACS,GAAL,CAAS,CAACR,GAAD,EAAMS,MAAN,KAAiB;AACzB,8BACE;AAAA,sBACGT,GAAG,CAACQ,GAAJ,CAAQ,CAACE,IAAD,EAAOC,OAAP,KAAmB;AAC1B,oBAAM;AAAEX,gBAAAA,GAAF;AAAOE,gBAAAA,GAAP;AAAYU,gBAAAA,QAAZ;AAAsBC,gBAAAA,OAAtB;AAA+BC,gBAAAA;AAA/B,kBAA0CJ,IAAhD;AACA,kCACE,QAAC,IAAD;AAEE,gBAAA,GAAG,EAAER,GAFP;AAGE,gBAAA,QAAQ,EAAEU,QAHZ;AAIE,gBAAA,OAAO,EAAEC,OAJX;AAKE,gBAAA,MAAM,EAAEC,MALV;AAME,gBAAA,GAAG,EAAEd;AANP,iBACOW,OADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAUD,aAZA;AADH,aAAUF,MAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAiBD,SAlBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GAjCQJ,M;;KAAAA,M;AAmCT,eAAeA,MAAf;;AAEA,MAAMD,UAAU,GAAG,CAACF,GAAD,EAAMF,GAAN,KAAc;AAC/B,SAAO;AACLE,IAAAA,GADK;AAELF,IAAAA,GAFK;AAGLa,IAAAA,OAAO,EAAEb,GAAG,KAAK,CAAR,IAAaE,GAAG,KAAK,EAHzB;AAILU,IAAAA,QAAQ,EAAEZ,GAAG,KAAK,EAAR,IAAcE,GAAG,KAAK,EAJ3B;AAKLa,IAAAA,QAAQ,EAAEC,QALL;AAMLC,IAAAA,SAAS,EAAE,KANN;AAOLH,IAAAA,MAAM,EAAE;AAPH,GAAP;AASD,CAVD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Matrix.css\";\r\nimport Node from \"./Node\";\r\n\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 15; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 40; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\n\r\nfunction Matrix() {\r\n  const [grid, setgrid] = useState([]);\r\n  useEffect(() => {\r\n    const grid1 = getInitialGrid();\r\n    setgrid(grid1);\r\n  });\r\n  return (\r\n    <>\r\n      <center>\r\n        <div className=\"grid\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      row={row}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Matrix;\r\n\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === 6 && col === 10,\r\n    isFinish: row === 13 && col === 13,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}