[{"C:\\Users\\kadam\\react\\Visualization\\src\\index.js":"1","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Matrix.js":"2","C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\dijkstra.js":"3","C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\BFS.js":"4","C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\Astar.js":"5","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Heading.jsx":"6","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Button.jsx":"7","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Dropdown.jsx":"8","C:\\Users\\kadam\\react\\Visualization\\src\\serviceWorker.js":"9","C:\\Users\\kadam\\react\\Visualization\\src\\App.js":"10","C:\\Users\\kadam\\react\\Visualization\\src\\visualizers\\PathfindingVisualizer.jsx":"11","C:\\Users\\kadam\\react\\Visualization\\src\\models\\Node\\Node.jsx":"12"},{"size":464,"mtime":1616930096223,"results":"13","hashOfConfig":"14"},{"size":4356,"mtime":1616930096305,"results":"15","hashOfConfig":"14"},{"size":5512,"mtime":1616930096331,"results":"16","hashOfConfig":"14"},{"size":2741,"mtime":1616924659123,"results":"17","hashOfConfig":"14"},{"size":1596,"mtime":1616743918475,"results":"18","hashOfConfig":"14"},{"size":156,"mtime":1616930096209,"results":"19","hashOfConfig":"14"},{"size":165,"mtime":1616930096203,"results":"20","hashOfConfig":"14"},{"size":316,"mtime":1616930096206,"results":"21","hashOfConfig":"14"},{"size":5086,"mtime":1616930096242,"results":"22","hashOfConfig":"14"},{"size":281,"mtime":1616930096196,"results":"23","hashOfConfig":"14"},{"size":5928,"mtime":1616930096250,"results":"24","hashOfConfig":"14"},{"size":717,"mtime":1616930096237,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"triyp6",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kadam\\react\\Visualization\\src\\index.js",[],"C:\\Users\\kadam\\react\\Visualization\\src\\components\\Matrix.js",["54","55","56","57"],"import React, { useEffect ,useState} from \"react\";\r\nimport \"./Matrix.css\";\r\nimport Node from \"./Node\";\r\nimport \"./Node.css\";\r\nimport dijkstra,{getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport Astar from \"../algorithms/Astar\";\r\nimport BFS from \"../algorithms/BFS\";\r\nimport \"./index.css\";\r\nimport Button from \"./Button\"; \r\nimport Heading from \"./Heading\";\r\nimport Dropdown from \"./Dropdown\"\r\n\r\nfunction getInitialGrid () {\r\n  const grid=[];\r\n  for (let row = 0; row < 15; row++) {\r\n    const rowgri=[];\r\n    for (let col = 0; col < 40; col++) {\r\n      rowgri.push(createNode(col, row));\r\n    }\r\n    grid.push(rowgri);\r\n  }\r\n  return grid;\r\n};\r\n\r\nfunction Matrix() {\r\n  const [grid1, setgrid] = useState([]);\r\n  useEffect(()=>{\r\n    const grid2=getInitialGrid();\r\n    setgrid(grid2);\r\n  },[]);\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n                <Heading name=\"Path Visualization\"></Heading>\r\n            <ul>\r\n                <Dropdown name=\"Algorithm\"></Dropdown>\r\n                <Dropdown name=\"Maze and pattern\"></Dropdown>\r\n                {/* <button onClick={()=>visualizeBFS(grid1)}>Start</button> */}\r\n                {/* <button onClick={()=>visualizeAstar(grid1)}>Start</button> */}\r\n                <button onClick={()=>visualizeDijkstra(grid1)}>Start</button>\r\n                <Button title=\"Stop!\"></Button>\r\n            </ul>\r\n        </div>\r\n      <center>\r\n        <div className=\"grid\">\r\n          {grid1.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { row, col, isFinish, isStart, isWall } = node;\r\n                  return (\r\n                    <Node\r\n                      key={nodeIdx}\r\n                      col={col}\r\n                      isFinish={isFinish}\r\n                      isStart={isStart}\r\n                      isWall={isWall}\r\n                      row={row}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Matrix;\r\n\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === 6 && col === 10,\r\n    isFinish: row === 7 && col === 13,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n  };\r\n};\r\n\r\nfunction animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n  for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n    if (i === visitedNodesInOrder.length) {\r\n      setTimeout(() => {\r\n        animateShortestPath(nodesInShortestPathOrder);\r\n      }, 10 * i);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      const node = visitedNodesInOrder[i];\r\n      document.getElementById(`node-${node.row}-${node.col}`).className =\r\n        'node-visited';\r\n    }, 10 * i);\r\n  }\r\n}\r\n\r\nfunction animateShortestPath(nodesInShortestPathOrder) {\r\n  for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n    setTimeout(() => {\r\n      const node = nodesInShortestPathOrder[i];\r\n      document.getElementById(`node-${node.row}-${node.col}`).className =\r\n        'node-shortest-path';\r\n    }, 50 * i);\r\n  }\r\n}\r\n\r\nfunction visualizeDijkstra(grid1) {\r\n  console.log(\"run\");\r\n  const startNode = grid1[6][10];\r\n  const finishNode = grid1[7][13];\r\n  const visitedNodes  = dijkstra(grid1, startNode, finishNode);\r\n  const nodesInShortestPathOrder =  getNodesInShortestPathOrder(finishNode,startNode)\r\n  animateDijkstra(visitedNodes, nodesInShortestPathOrder);\r\n}\r\n\r\n\r\nfunction visualizeAstar(grid1) {\r\n  console.log(\"run\");\r\n  const startNode = grid1[6][10];\r\n  const finishNode = grid1[7][13];\r\n  const visitedNodes  = Astar(grid1, startNode, finishNode);\r\n  // const nodesInShortestPathOrder =  getNodesInShortestPathOrder(finishNode,startNode)\r\n  // animateDijkstra(visitedNodes, nodesInShortestPathOrder);\r\n}\r\n\r\n\r\nfunction visualizeBFS(grid1) {\r\n  console.log(\"run\");\r\n  const startNode = grid1[6][10];\r\n  const finishNode = grid1[7][13];\r\n  const visitedNodes  = BFS(grid1, startNode, finishNode);\r\n  // const nodesInShortestPathOrder =  getNodesInShortestPathOrder(finishNode,startNode)\r\n  // animateDijkstra(visitedNodes, nodesInShortestPathOrder);\r\n}\r\n\r\n",["58","59"],"C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\dijkstra.js",["60"],"C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\BFS.js",[],"C:\\Users\\kadam\\react\\Visualization\\src\\algorithms\\Astar.js",["61","62","63"],"\r\nfunction Astar(grid1,startNode, finishNode){\r\n    if(startNode==finishNode || !startNode || !finishNode){\r\n        return false;\r\n    }\r\n    \r\n    const graph=creategraph(grid1);\r\n    console.log(\"Graph created\");\r\n\r\n}\r\n\r\n\r\n\r\nfunction creategraph(grid){\r\n    const graph=new Graph();\r\n    for(let row=0;row<15;row++)\r\n    {\r\n        for(let col=0;col<=40;col++)\r\n        {\r\n            graph.addVertex(grid[row][col]);\r\n        }\r\n    }\r\n    for(let row=0;row<15;row++)\r\n    {\r\n        for(let col=0;col<=40;col++)\r\n        {\r\n            if((col+1<40)){\r\n                graph.addVertex(grid[row][col],grid[row][col+1]);\r\n            }\r\n            if((col-1>=0)){\r\n                graph.addVertex(grid[row][col],grid[row][col-1]);\r\n            }\r\n            if((row-1)>=0){\r\n                graph.addVertex(grid[row][col],grid[row-1][col]);\r\n            }\r\n            if((row+1)<15){\r\n                graph.addVertex(grid[row][col],grid[row+1][col]);\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\n\r\nclass Graph{\r\n  constructor(noOfVertices){\r\n      this.noOfVertices=noOfVertices;\r\n      this.Adjlist=new Map()\r\n  }  \r\n\r\n  addVertex(v){\r\n      this.Adjlist.set(v,[]);\r\n  }\r\n\r\n  addEdge(v,w){\r\n      this.Adjlist.get(v).push(w);\r\n  }\r\n\r\n  getAdjacents(node){\r\n      return this.Adjlist.get(node)\r\n  }\r\n\r\n  isAdjacent(node,neighbor) {\r\n    var temp=0;\r\n    this.AdjList.get(node).forEach(adj => {\r\n        if(adj === neighbor){\r\n            temp++;\r\n        }\r\n    })\r\n    if(temp==0){\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n}\r\n}\r\n\r\nexport default Astar;","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Heading.jsx",[],"C:\\Users\\kadam\\react\\Visualization\\src\\components\\Button.jsx",["64"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nfunction Button(props){\r\n  return (\r\n  <>\r\n  <button className=\"buttons\">{props.title}</button>\r\n  </>);\r\n}\r\n\r\n\r\nexport default Button;","C:\\Users\\kadam\\react\\Visualization\\src\\components\\Dropdown.jsx",[],"C:\\Users\\kadam\\react\\Visualization\\src\\serviceWorker.js",[],"C:\\Users\\kadam\\react\\Visualization\\src\\App.js",[],"C:\\Users\\kadam\\react\\Visualization\\src\\visualizers\\PathfindingVisualizer.jsx",["65","66"],"C:\\Users\\kadam\\react\\Visualization\\src\\models\\Node\\Node.jsx",[],{"ruleId":"67","severity":1,"message":"68","line":122,"column":10,"nodeType":"69","messageId":"70","endLine":122,"endColumn":24},{"ruleId":"67","severity":1,"message":"71","line":126,"column":9,"nodeType":"69","messageId":"70","endLine":126,"endColumn":21},{"ruleId":"67","severity":1,"message":"72","line":132,"column":10,"nodeType":"69","messageId":"70","endLine":132,"endColumn":22},{"ruleId":"67","severity":1,"message":"71","line":136,"column":9,"nodeType":"69","messageId":"70","endLine":136,"endColumn":21},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":null,"fatal":true,"severity":2,"message":"77","line":1,"column":2},{"ruleId":"78","severity":1,"message":"79","line":3,"column":17,"nodeType":"80","messageId":"81","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"82","line":7,"column":11,"nodeType":"69","messageId":"70","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":70,"column":12,"nodeType":"80","messageId":"81","endLine":70,"endColumn":14},{"ruleId":"67","severity":1,"message":"83","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"84","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":18},{"ruleId":"67","severity":1,"message":"85","line":20,"column":10,"nodeType":"69","messageId":"70","endLine":20,"endColumn":18},"no-unused-vars","'visualizeAstar' is defined but never used.","Identifier","unusedVar","'visitedNodes' is assigned a value but never used.","'visualizeBFS' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[36mfunction\u001b[39m dijikstra(grid\u001b[33m,\u001b[39mstartnode\u001b[33m,\u001b[39mendnode){\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m    startnode\u001b[33m.\u001b[39mdistance\u001b[33m=\u001b[39m\u001b[35m0\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m    \u001b[36mconst\u001b[39m visited \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mMap\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'graph' is assigned a value but never used.","'ReactDOM' is defined but never used.","'isActive' is assigned a value but never used.","'isPaused' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]